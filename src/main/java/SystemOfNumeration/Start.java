package SystemOfNumeration;

public class Start {
    public static void main(String[] args) {
        /**
         * 对于整数，有四种表示方式
         * 1）二进制：0,1  满2进1，以0b或0B开头。
         * 2）十进制：0~9  满10进1。
         * 3）八进制：0~7  满8进1，以数字0开头。
         * 4）十六进制：0~9以及A（10）~F（15），满16进1，以0x或0X开头，A~F不区分大小写。
         */
        int n1 = 0b1010;
        int n2 = 1010;
        int n3 = 01010;
        int n4 = 0x10101;
        System.out.println("n1 = " + n1 + ", n2 = " + n2 + ", n3 = " + n3 + ", n4 = " + n4);

        /**
         * 八进制 转 十进制
         * 从最低位（右边）开始，将每个位上的数提取出来，乘以8的（位数-1）次方，然后求和。
         */

        /**
         * 十六进制 转 十进制
         * 从最低位（右边）开始，将每个位上的数提取出来，乘以16的（位数-1）次方，然后求和。
         */

        /**
         * 十进制 转 二进制
         * 将该数不断除以2，直到商为0为止，然后将每步得到的余数倒过来，就是对应的二进制。
         */

        /**
         * 十进制 转 八进制
         * 将该数不断除以8，直到商为0为止，然后将每步得到的余数倒过来，就是对应的八进制。
         */

        /**
         * 十进制 转 十六进制
         * 将该数不断除以16，直到商为0为止，然后将每步得到的余数倒过来，就是对应的八进制。
         */

        /**
         * 二进制 转 八进制
         * 从低位开始，将二进制数每三位一组，转成对应的八进制即可。（111 -> 7）
         */

        /**
         * 二进制 转 十六进制
         * 从低位开始，将二进制数每四位一组，转成对应的十六进制即可。（1111 -> F）
         */

        /**
         * 八进制 转 二进制
         * 将八进制数每1位，转成对应的一个3位的二进制数即可。
         */

        /**
         * 十六进制 转 二进制
         * 将十六进制数每1位，转成对应的4位的一个二进制即可。
         */
    }
}
